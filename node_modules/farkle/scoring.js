//scoring.js
var payouts = require('./payouts.json');

module.exports = function(dice){
    var total = 0;
    var sets = [];
    var negate1and5 = false;

    for (var i = 0; i < dice.length; i++){
        if (sets.indexOf(dice[i]) < 0) {
            var numberInSet = countInArray(dice, dice[i]);

            switch(numberInSet) {
                case 6:
                    total += payouts.set_of_six;
                    sets.push(dice[i]);
                    break;
                case 5:
                    total += payouts.set_of_five;
                    sets.push(dice[i]);
                    break;
                case 4:
                    var fullHouse = detectFullHouse(dice);
                    if (fullHouse.length == 2 && payouts.full_house > payouts.set_of_four) {
                        sets.push(fullHouse[0]);
                        sets.push(fullHouse[1]);
                        total += payouts.full_house;
                    } else {
                        sets.push(dice[i]);
                        total += payouts.set_of_four;
                    }
                    break;
                case 3:
                    var triples = detectTwoTriples(dice);
                    var fullHouse = detectFullHouse(dice);

                    if (triples.length == 2) {
                        sets.push(triples[0]);
                        sets.push(triples[1]);
                        total += payouts.two_triples;
                    } else if (fullHouse.length == 2) {
                        sets.push(fullHouse[0]);
                        sets.push(fullHouse[1]);
                        total += payouts.full_house;
                    } else if (dice[i] == 1) {
                        //3 1s usually worth 300, not 100
                        sets.push(dice[i]);
                        total += payouts.three_ones;
                    } else {
                        sets.push(dice[i]);
                        total += dice[i] * 100;
                    }

                    break;
            } 
        }
    }

    if (detectThreePairs(dice)) {
        negate1and5 = true;
        total += payouts.three_pairs;

    } else if (detectStraight(dice)) {
        negate1and5 = true;
        total += payouts.straight;
    }

    //count 1s and 5s
    if (!negate1and5) {
        if (sets.indexOf(1) < 0) {
            total += countInArray(dice, 1) * payouts.ones;
        }

        if (sets.indexOf(5) < 0) {
            total += countInArray(dice, 5) * payouts.fives;
        }
    }

    return total;
}
	
function detectStraight (dice){
    for (var i = 1; i <= 6; i++) {
        if (dice.indexOf(i) < 0) return false;
    }

    return true;
}

function detectTwoTriples(dice){
    var triplesFound = [];

    if (dice.length == 6){
        for (var i = 0; i < dice.length; i++){
            if (countInArray(dice, dice[i]) == 3 && triplesFound.indexOf(dice[i]) < 0) {
                triplesFound.push(dice[i]);
            }
        }
    } 

    return triplesFound;
}

function detectThreePairs(dice){
    var foundThreePairs = true;

    if (dice.length == 6){
        for (var i = 0; i < dice.length; i++){
            if (countInArray(dice, dice[i]) != 2) {
                foundThreePairs = false;
                break;
            }
        }
    } else {
        foundThreePairs = false;
    }

    return foundThreePairs;
}

function detectFullHouse(dice) {
    var foundPair = 0;
    var foundTriple = 0;

    if (dice.length >= 5) {
        for (var i = 0; i < dice.length; i++){
            var numberInSet = countInArray(dice, dice[i]);

            if (numberInSet >= 3) foundTriple = dice[i];
            else if (numberInSet == 2) foundPair = dice[i];
        }
    }

    var returnArr = [];
    if (foundTriple > 0 && foundPair > 0) returnArr = [foundTriple, foundPair];

    return returnArr;
}

function countInArray(array, what) {
    var count = 0;
    for (var i = 0; i < array.length; i++) {
        if (array[i] === what) {
            count++;
        }
    }
    return count;
}
	
	